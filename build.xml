<?xml version="1.0" encoding="UTF-8"?>
<!-- You may freely edit this file. See harness/README in the NetBeans platform -->
<!-- for some information on what you could do (e.g. targets to override). -->
<!-- If you delete this file and reopen the project it will be recreated. -->
<project name="JJazzLabX" basedir=".">
    <description>Builds the module suite JJazzLabX.</description>
    <import file="nbproject/build-impl.xml"/>
    
    <target name="javadoc-build-jjazzlabx" depends="-check-javadoc-zip, -init, -jdk-init" unless="javadoc.zip.exists">
        <mkdir dir="${suite.build.dir}/javadoc/"/>
        <javadoc destdir="${suite.build.dir}/javadoc/" useexternalfile="yes" access="public" encoding="UTF-8" charset="UTF-8">
            <sourcefiles>
                <fileset dir="${basedir}">
                    <include name="**/src/**/*.java" />
                    <exclude name="**/package-info.java" />     <!-- special file with no class defined -->
                </fileset>
            </sourcefiles>         
            <classpath>
                <fileset dir="${nbplatform.active.dir}">
                    <include name="**/*.jar" />
                    <exclude name="**/org-netbeans-libs-javafx.jar"/>   <!-- javadoc error URISyntaxException! -->
                </fileset>                
                <fileset dir="${basedir}/build/cluster/modules/" />
            </classpath>
            <link href="https://docs.oracle.com/en/java/javase/11/docs/api/java.base/"/>
        </javadoc>
        <zip destfile="${suite.build.dir}/javadoc.zip" basedir="${suite.build.dir}/javadoc/" />
    </target>
    
    <target name="-check-javadoc-zip" >
        <available file="${suite.build.dir}/javadoc.zip" property="javadoc.zip.exists" />
        <echo message="JavaDoc zip file already exists : ${javadoc.zip.exists}" />
    </target>
    
    <target name="javadoc-view-jjazzlabx" depends="javadoc-build-jjazzlabx">
        <nbbrowse file="${suite.build.dir}/javadoc/index.html" />
    </target>    
        
    <taskdef resource="net/sf/antcontrib/antlib.xml">
        <classpath>
            <pathelement location="Build-Lib/ant-contrib-1.0b3.jar"/>
        </classpath>
    </taskdef>
    
    <target name="-init" depends="suite.-init">
        <!--Create/Update keystore-->
        <!--  COMMENTED OUT: we use our own keystore 
        <delete file="${keystore.location}${keystore.name}"/>
        <mkdir dir="${keystore.location}"/>
        <genkey alias="${keystore.alias}" storepass="${keystore.password}"
                dname="${keystore.dname}"
                keystore="${keystore.location}${keystore.name}"/> 
        -->
        <!--Update keystore info in projects-->
        <!-- UNCOMMENT LINE BELOW TO REUPDATE ALL PROJECT.PROPERTIES + PLATFORM-PRIVATE.PROPERTIES -->
        <!-- antcall target="update-keystore-info"/ -->
    </target>

    <target name="update-keystore-info">
        <for list="${modules}" delimiter=":" param="cur" trim="true">
            <sequential>
                <mkdir dir="@{cur}/nbproject/"/>
                <!--Place the information in the properties file-->
                <propertyfile file="@{cur}/nbproject/project.properties">
                    <entry  key="keystore" value="../${keystore.location}${keystore.name}"/>
                    <entry  key="nbm_alias" value="${keystore.alias}"/>
                </propertyfile>
                <mkdir dir="@{cur}/nbproject/private/"/>
                <!--Place the password in the private properties file-->
                <propertyfile file="@{cur}/nbproject/private/platform-private.properties">
                    <entry  key="storepass" value="${keystore.password}"/>
                </propertyfile>
            </sequential>
        </for>    
    </target>
    
</project>
