/*
 *  DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS HEADER.
 * 
 *  Copyright @2019 Jerome Lelasseux. All rights reserved.
 *
 *  This file is part of the JJazzLabX software.
 *   
 *  JJazzLabX is free software: you can redistribute it and/or modify
 *  it under the terms of the Lesser GNU General Public License (LGPLv3) 
 *  as published by the Free Software Foundation, either version 3 of the License, 
 *  or (at your option) any later version.
 *
 *  JJazzLabX is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *  GNU Lesser General Public License for more details.
 * 
 *  You should have received a copy of the GNU Lesser General Public License
 *  along with JJazzLabX.  If not, see <https://www.gnu.org/licenses/>
 * 
 *  Contributor(s): 
 */
package org.jjazz.helpers.midiwizard;

import javax.sound.midi.MidiDevice;
import javax.sound.midi.MidiUnavailableException;
import javax.swing.JPanel;
import org.jjazz.midi.JJazzMidiSystem;
import org.jjazz.musiccontrol.MusicController;
import org.jjazz.rhythm.api.MusicGenerationException;
import org.openide.DialogDisplayer;
import org.openide.NotifyDescriptor;

public final class MidiWizardVisualPanel4 extends JPanel
{

    MidiDevice midiDeviceOut;

    /**
     * Creates new form StartupWizardVisualPanel4
     */
    public MidiWizardVisualPanel4()
    {
        initComponents();
    }

    public void setMidiDeviceOut(MidiDevice md)
    {
        midiDeviceOut = md;
        lbl_outDevice.setText("Midi Out: " + JJazzMidiSystem.getInstance().getDeviceFriendlyName(md));
        lbl_outDevice.setToolTipText(md.getDeviceInfo().getDescription());
    }

    @Override
    public String getName()
    {
        return "Multitimbral mode";
    }

    private void sendTestNotes(int channel)
    {
        assert midiDeviceOut != null;

        final JJazzMidiSystem jms = JJazzMidiSystem.getInstance();
        final MidiDevice saveDeviceOut = jms.getDefaultOutDevice();
        try
        {
            jms.setDefaultOutDevice(midiDeviceOut);
        } catch (MidiUnavailableException ex)
        {
            NotifyDescriptor d = new NotifyDescriptor.Message(ex.getLocalizedMessage(), NotifyDescriptor.ERROR_MESSAGE);
            DialogDisplayer.getDefault().notify(d);
            return;
        }

        btn_test1.setEnabled(false);
        btn_test2.setEnabled(false);
        btn_test3.setEnabled(false);
        Runnable endAction = new Runnable()
        {
            @Override
            public void run()
            {
                // Called when sequence is stopped
                btn_test1.setEnabled(true);
                btn_test2.setEnabled(true);
                btn_test3.setEnabled(true);
                try
                {
                    jms.setDefaultOutDevice(saveDeviceOut);
                } catch (MidiUnavailableException ex)
                {
                    NotifyDescriptor d = new NotifyDescriptor.Message(ex.getLocalizedMessage(), NotifyDescriptor.ERROR_MESSAGE);
                    DialogDisplayer.getDefault().notify(d);
                }
            }
        };

        MusicController mc = MusicController.getInstance();
        try
        {
            mc.playTestNotes(channel, -1, 0, endAction);
        } catch (MusicGenerationException ex)
        {
            NotifyDescriptor d = new NotifyDescriptor.Message(ex.getLocalizedMessage(), NotifyDescriptor.ERROR_MESSAGE);
            DialogDisplayer.getDefault().notify(d);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form. WARNING: Do NOT modify this code. The content of
     * this method is always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        wizardTextArea1 = new org.jjazz.helpers.midiwizard.WizardTextArea();
        btn_test1 = new javax.swing.JButton();
        btn_test2 = new javax.swing.JButton();
        btn_test3 = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        helpTextArea1 = new org.jjazz.ui.utilities.HelpTextArea();
        lbl_outDevice = new javax.swing.JLabel();

        jScrollPane1.setBorder(null);

        wizardTextArea1.setEditable(false);
        wizardTextArea1.setColumns(20);
        wizardTextArea1.setRows(5);
        wizardTextArea1.setText(org.openide.util.NbBundle.getMessage(MidiWizardVisualPanel4.class, "MidiWizardVisualPanel4.wizardTextArea1.text")); // NOI18N
        jScrollPane1.setViewportView(wizardTextArea1);

        org.openide.awt.Mnemonics.setLocalizedText(btn_test1, org.openide.util.NbBundle.getMessage(MidiWizardVisualPanel4.class, "MidiWizardVisualPanel4.btn_test1.text")); // NOI18N
        btn_test1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_test1ActionPerformed(evt);
            }
        });

        org.openide.awt.Mnemonics.setLocalizedText(btn_test2, org.openide.util.NbBundle.getMessage(MidiWizardVisualPanel4.class, "MidiWizardVisualPanel4.btn_test2.text")); // NOI18N
        btn_test2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_test2ActionPerformed(evt);
            }
        });

        org.openide.awt.Mnemonics.setLocalizedText(btn_test3, org.openide.util.NbBundle.getMessage(MidiWizardVisualPanel4.class, "MidiWizardVisualPanel4.btn_test3.text")); // NOI18N
        btn_test3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_test3ActionPerformed(evt);
            }
        });

        jScrollPane2.setBorder(null);

        helpTextArea1.setColumns(20);
        helpTextArea1.setRows(5);
        helpTextArea1.setText(org.openide.util.NbBundle.getMessage(MidiWizardVisualPanel4.class, "MidiWizardVisualPanel4.helpTextArea1.text")); // NOI18N
        jScrollPane2.setViewportView(helpTextArea1);

        org.openide.awt.Mnemonics.setLocalizedText(lbl_outDevice, org.openide.util.NbBundle.getMessage(MidiWizardVisualPanel4.class, "MidiWizardVisualPanel4.lbl_outDevice.text")); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane2)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lbl_outDevice)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btn_test1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btn_test2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btn_test3)))
                        .addGap(0, 52, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(lbl_outDevice)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btn_test1)
                    .addComponent(btn_test2)
                    .addComponent(btn_test3))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 131, Short.MAX_VALUE)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btn_test1ActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_btn_test1ActionPerformed
    {//GEN-HEADEREND:event_btn_test1ActionPerformed
        sendTestNotes(0);
    }//GEN-LAST:event_btn_test1ActionPerformed

    private void btn_test2ActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_btn_test2ActionPerformed
    {//GEN-HEADEREND:event_btn_test2ActionPerformed
        sendTestNotes(9);
    }//GEN-LAST:event_btn_test2ActionPerformed

    private void btn_test3ActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_btn_test3ActionPerformed
    {//GEN-HEADEREND:event_btn_test3ActionPerformed
        sendTestNotes(15);
    }//GEN-LAST:event_btn_test3ActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_test1;
    private javax.swing.JButton btn_test2;
    private javax.swing.JButton btn_test3;
    private org.jjazz.ui.utilities.HelpTextArea helpTextArea1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lbl_outDevice;
    private org.jjazz.helpers.midiwizard.WizardTextArea wizardTextArea1;
    // End of variables declaration//GEN-END:variables
}
