/*
 *  DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS HEADER.
 * 
 *  Copyright @2019 Jerome Lelasseux. All rights reserved.
 *
 *  This file is part of the JJazzLabX software.
 *   
 *  JJazzLabX is free software: you can redistribute it and/or modify
 *  it under the terms of the Lesser GNU General Public License (LGPLv3) 
 *  as published by the Free Software Foundation, either version 3 of the License, 
 *  or (at your option) any later version.
 *
 *  JJazzLabX is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the 
 *  GNU Lesser General Public License for more details.
 * 
 *  You should have received a copy of the GNU Lesser General Public License
 *  along with JJazzLabX.  If not, see <https://www.gnu.org/licenses/>
 * 
 *  Contributor(s): 
 */
package org.jjazz.pianoroll;

import org.jjazz.ui.keyboardcomponent.api.KeyboardComponent;
import org.jjazz.ui.keyboardcomponent.api.KeyboardComponent.Orientation;
import org.jjazz.ui.keyboardcomponent.api.KeyboardRange;

/**
 * The panel representing the ruler, the keyboard on the left, and the notes on the right.
 */
public class KeysAndNotesPanel extends javax.swing.JPanel
{
    
    NotesPanel notesPanel;

    /**
     * Creates new form PianoRollPanel
     */
    public KeysAndNotesPanel()
    {
        initComponents();
        
        addNotesText(keyboard);
        notesPanel = new NotesPanel(keyboard);
        pnl_notes.add(notesPanel);
        
        
    }

    /**
     * @param factor A value &gt; 0
     */
    public void setZoomY(float factor)
    {
        keyboard.setScaleFactor(factor);
    }

    // ==========================================================================================================
    // Private methods
    // ==========================================================================================================    
    private void addNotesText(KeyboardComponent kbd)
    {
        for (var key : kbd.getWhiteKeys())
        {            
            int p = key.getPitch();
            if (p % 12 == 0)
            {
                int o = p / 12 - 1;
                key.setText("C" + o);
            }
        }
    }

    /**
     * This method is called from within the constructor to initialize the form. WARNING: Do NOT modify this code. The content of
     * this method is always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents()
    {

        pnl_ruler = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        pnl_keynotes = new javax.swing.JPanel();
        pnl_keyboard = new javax.swing.JPanel();
        keyboard = new KeyboardComponent(KeyboardRange._128_KEYS, Orientation.RIGHT, false);
        pnl_notes = new javax.swing.JPanel();

        setLayout(new java.awt.BorderLayout());

        org.openide.awt.Mnemonics.setLocalizedText(jLabel1, org.openide.util.NbBundle.getMessage(KeysAndNotesPanel.class, "KeysAndNotesPanel.jLabel1.text")); // NOI18N

        javax.swing.GroupLayout pnl_rulerLayout = new javax.swing.GroupLayout(pnl_ruler);
        pnl_ruler.setLayout(pnl_rulerLayout);
        pnl_rulerLayout.setHorizontalGroup(
            pnl_rulerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnl_rulerLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addContainerGap(949, Short.MAX_VALUE))
        );
        pnl_rulerLayout.setVerticalGroup(
            pnl_rulerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnl_rulerLayout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addComponent(jLabel1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        add(pnl_ruler, java.awt.BorderLayout.NORTH);

        pnl_keynotes.setLayout(new java.awt.BorderLayout());

        pnl_keyboard.setLayout(new javax.swing.BoxLayout(pnl_keyboard, javax.swing.BoxLayout.LINE_AXIS));
        pnl_keyboard.add(keyboard);

        pnl_keynotes.add(pnl_keyboard, java.awt.BorderLayout.WEST);

        pnl_notes.setLayout(new javax.swing.BoxLayout(pnl_notes, javax.swing.BoxLayout.LINE_AXIS));
        pnl_keynotes.add(pnl_notes, java.awt.BorderLayout.CENTER);

        jScrollPane1.setViewportView(pnl_keynotes);

        add(jScrollPane1, java.awt.BorderLayout.CENTER);
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private org.jjazz.ui.keyboardcomponent.api.KeyboardComponent keyboard;
    private javax.swing.JPanel pnl_keyboard;
    private javax.swing.JPanel pnl_keynotes;
    private javax.swing.JPanel pnl_notes;
    private javax.swing.JPanel pnl_ruler;
    // End of variables declaration//GEN-END:variables

    
}
