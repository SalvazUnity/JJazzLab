/*
 *  DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS HEADER.
 * 
 *  Copyright @2019 Jerome Lelasseux. All rights reserved.
 *
 *  This file is part of the JJazzLabX software.
 *   
 *  JJazzLabX is free software: you can redistribute it and/or modify
 *  it under the terms of the Lesser GNU General Public License (LGPLv3) 
 *  as published by the Free Software Foundation, either version 3 of the License, 
 *  or (at your option) any later version.
 *
 *  JJazzLabX is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the 
 *  GNU Lesser General Public License for more details.
 * 
 *  You should have received a copy of the GNU Lesser General Public License
 *  along with JJazzLabX.  If not, see <https://www.gnu.org/licenses/>
 * 
 *  Contributor(s): 
 */
package org.jjazz.pianoroll;

import java.awt.Color;
import java.beans.PropertyChangeEvent;
import java.beans.PropertyChangeListener;
import java.util.List;
import javax.swing.DefaultComboBoxModel;
import javax.swing.SwingUtilities;
import javax.swing.Timer;
import org.jjazz.pianoroll.api.EditTool;
import org.jjazz.pianoroll.api.PianoRollEditor;
import org.jjazz.quantizer.api.Quantization;


/**
 * Toolbar panel of the PianoRollEditor.
 */
public class ToolbarPanel extends javax.swing.JPanel implements PropertyChangeListener
{

    private final PianoRollEditor editor;

    /**
     * Creates new form ToolbarPanel
     */
    public ToolbarPanel(PianoRollEditor editor, List<EditTool> tools)
    {
        this.editor = editor;
        initComponents();

        var qModel = new DefaultComboBoxModel(Quantization.values());
        qModel.removeElement(Quantization.HALF_BAR);

        cmb_quantization.setModel(qModel);
        cmb_quantization.setSelectedItem(editor.getQuantization());
        cb_snap.setSelected(editor.isSnapEnabled());

        add(new EditToolBar(editor, tools));

        editor.addPropertyChangeListener(this);
    }

    // ====================================================================================
    // PropertyChangeListener interface
    // ====================================================================================
    @Override
    public void propertyChange(PropertyChangeEvent evt)
    {
        if (evt.getSource() == editor)
        {
            if (evt.getPropertyName().equals(PianoRollEditor.PROP_SNAP_ENABLED))
            {
                cb_snap.setSelected(editor.isSnapEnabled());
            } else if (evt.getPropertyName().equals(PianoRollEditor.PROP_QUANTIZATION))
            {
                cmb_quantization.setSelectedItem(editor.getQuantization());
            }
        }
    }


    // ====================================================================================
    // Private methods
    // ====================================================================================
    /**
     * This method is called from within the constructor to initialize the form. WARNING: Do NOT modify this code. The content of
     * this method is always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents()
    {

        cmb_quantization = new javax.swing.JComboBox<>();
        cb_snap = new javax.swing.JCheckBox();
        flatToggleButton1 = new org.jjazz.ui.flatcomponents.api.FlatToggleButton();

        setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 5, 2));

        cmb_quantization.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                cmb_quantizationActionPerformed(evt);
            }
        });
        add(cmb_quantization);

        org.openide.awt.Mnemonics.setLocalizedText(cb_snap, org.openide.util.NbBundle.getMessage(ToolbarPanel.class, "ToolbarPanel.cb_snap.text")); // NOI18N
        cb_snap.addChangeListener(new javax.swing.event.ChangeListener()
        {
            public void stateChanged(javax.swing.event.ChangeEvent evt)
            {
                cb_snapStateChanged(evt);
            }
        });
        add(cb_snap);

        flatToggleButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/org/jjazz/pianoroll/resources/SnapOFF.png"))); // NOI18N
        flatToggleButton1.setSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/org/jjazz/pianoroll/resources/SnapON.png"))); // NOI18N
        add(flatToggleButton1);
    }// </editor-fold>//GEN-END:initComponents

    private void cmb_quantizationActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_cmb_quantizationActionPerformed
    {//GEN-HEADEREND:event_cmb_quantizationActionPerformed
        editor.setQuantization((Quantization) cmb_quantization.getSelectedItem());
    }//GEN-LAST:event_cmb_quantizationActionPerformed

    private void cb_snapStateChanged(javax.swing.event.ChangeEvent evt)//GEN-FIRST:event_cb_snapStateChanged
    {//GEN-HEADEREND:event_cb_snapStateChanged
        editor.setSnapEnabled(cb_snap.isSelected());
    }//GEN-LAST:event_cb_snapStateChanged


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox cb_snap;
    private javax.swing.JComboBox<Quantization> cmb_quantization;
    private org.jjazz.ui.flatcomponents.api.FlatToggleButton flatToggleButton1;
    // End of variables declaration//GEN-END:variables


}
