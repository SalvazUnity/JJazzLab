/*
 *  DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS HEADER.
 * 
 *  Copyright @2019 Jerome Lelasseux. All rights reserved.
 *
 *  This file is part of the JJazzLabX software.
 *   
 *  JJazzLabX is free software: you can redistribute it and/or modify
 *  it under the terms of the Lesser GNU General Public License (LGPLv3) 
 *  as published by the Free Software Foundation, either version 3 of the License, 
 *  or (at your option) any later version.
 *
 *  JJazzLabX is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *  GNU Lesser General Public License for more details.
 * 
 *  You should have received a copy of the GNU Lesser General Public License
 *  along with JJazzLabX.  If not, see <https://www.gnu.org/licenses/>
 * 
 *  Contributor(s): 
 */
package org.jjazz.notesviewer.piano;

import org.jjazz.notesviewer.spi.NotesViewer;
import org.jjazz.ui.keyboardcomponent.api.KeyboardComponent;
import org.jjazz.ui.keyboardcomponent.api.KeyboardRange;


public class PianoNotesViewerComponent extends javax.swing.JPanel
{

    private final KeyboardComponent keyboard;
    private final PianoNotesViewer notesViewer;

    /**
     * Creates new form PianoViewerComponent
     */
    public PianoNotesViewerComponent(PianoNotesViewer viewer)
    {
        notesViewer = viewer;

        initComponents();

        keyboard = new KeyboardComponent(KeyboardRange._49_KEYS, KeyboardComponent.Orientation.DOWN, true);
        pnl_keyboard.remove(pnl_toBeRemoved);
        pnl_keyboard.add(keyboard, 0);
    }

    public KeyboardComponent getKeyboard()
    {
        return keyboard;
    }

    @Override
    public void setEnabled(boolean b)
    {
        super.setEnabled(b);
        keyboard.setEnabled(b);
    }

    /**
     * This method is called from within the constructor to initialize the form. WARNING: Do NOT modify this code. The content of
     * this method is always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents()
    {

        pnl_keyboard = new javax.swing.JPanel();
        pnl_toBeRemoved = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        fbtn_size = new org.jjazz.ui.flatcomponents.api.FlatButton();

        setLayout(new javax.swing.BoxLayout(this, javax.swing.BoxLayout.Y_AXIS));

        pnl_keyboard.setLayout(new javax.swing.BoxLayout(pnl_keyboard, javax.swing.BoxLayout.LINE_AXIS));

        pnl_toBeRemoved.setBackground(new java.awt.Color(255, 153, 0));
        pnl_toBeRemoved.setMinimumSize(new java.awt.Dimension(150, 10));
        pnl_toBeRemoved.setPreferredSize(new java.awt.Dimension(150, 20));

        javax.swing.GroupLayout pnl_toBeRemovedLayout = new javax.swing.GroupLayout(pnl_toBeRemoved);
        pnl_toBeRemoved.setLayout(pnl_toBeRemovedLayout);
        pnl_toBeRemovedLayout.setHorizontalGroup(
            pnl_toBeRemovedLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 208, Short.MAX_VALUE)
        );
        pnl_toBeRemovedLayout.setVerticalGroup(
            pnl_toBeRemovedLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 260, Short.MAX_VALUE)
        );

        pnl_keyboard.add(pnl_toBeRemoved);

        jPanel1.setMaximumSize(new java.awt.Dimension(18, 32767));
        jPanel1.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.RIGHT, 0, 2));

        fbtn_size.setIcon(new javax.swing.ImageIcon(getClass().getResource("/org/jjazz/notesviewer/piano/resources/LeftRightArrowsSmall.png"))); // NOI18N
        fbtn_size.setToolTipText(org.openide.util.NbBundle.getBundle(PianoNotesViewerComponent.class).getString("PianoNotesViewerComponent.fbtn_size.toolTipText")); // NOI18N
        fbtn_size.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                fbtn_sizeActionPerformed(evt);
            }
        });
        jPanel1.add(fbtn_size);

        pnl_keyboard.add(jPanel1);

        add(pnl_keyboard);
    }// </editor-fold>//GEN-END:initComponents

    private void fbtn_sizeActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_fbtn_sizeActionPerformed
    {//GEN-HEADEREND:event_fbtn_sizeActionPerformed
        if (notesViewer.getMode().equals(NotesViewer.Mode.ShowBackingTrack))
        {
            keyboard.reset();
        }
        keyboard.setRange(keyboard.getRange().next());
    }//GEN-LAST:event_fbtn_sizeActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private org.jjazz.ui.flatcomponents.api.FlatButton fbtn_size;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel pnl_keyboard;
    private javax.swing.JPanel pnl_toBeRemoved;
    // End of variables declaration//GEN-END:variables
}
