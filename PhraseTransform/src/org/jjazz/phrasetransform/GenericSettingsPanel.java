/*
 *  DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS HEADER.
 * 
 *  Copyright @2019 Jerome Lelasseux. All rights reserved.
 *
 *  This file is part of the JJazzLabX software.
 *   
 *  JJazzLabX is free software: you can redistribute it and/or modify
 *  it under the terms of the Lesser GNU General Public License (LGPLv3) 
 *  as published by the Free Software Foundation, either version 3 of the License, 
 *  or (at your option) any later version.
 *
 *  JJazzLabX is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the 
 *  GNU Lesser General Public License for more details.
 * 
 *  You should have received a copy of the GNU Lesser General Public License
 *  along with JJazzLabX.  If not, see <https://www.gnu.org/licenses/>
 * 
 *  Contributor(s): 
 */
package org.jjazz.phrasetransform;

import org.jjazz.phrasetransform.api.PtProperties;
import org.jjazz.ui.flatcomponents.api.FlatIntegerKnob;

/**
 * A generic knob for one integer property between 0 and 127.
 */
public class GenericSettingsPanel extends javax.swing.JPanel
{

    private PtProperties ptProperties;
    private final String property;

    /**
     * 
     * @param propName The property name to represent
     * @param displayName Its name
     * @param usePanoramicKnob If true use panoramic-type know
     */
    public GenericSettingsPanel(String propName, String displayName, boolean usePanoramicKnob)
    {
        property = propName;
        initComponents();
        lbl_name.setText(displayName);
        knob_offset.setPanoramicType(usePanoramicKnob);
    }

    public void preset(PtProperties ptProperties)
    {
        this.ptProperties = ptProperties;
        knob_offset.setValue(ptProperties.getPropertyAsInteger(property));
    }

    /**
     * This method is called from within the constructor to initialize the form. WARNING: Do NOT modify this code. The content of
     * this method is always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents()
    {

        jPanel1 = new javax.swing.JPanel();
        knob_offset = new org.jjazz.ui.flatcomponents.api.FlatIntegerKnob();
        jPanel2 = new javax.swing.JPanel();
        lbl_name = new javax.swing.JLabel();

        jPanel1.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.CENTER, 0, 0));

        knob_offset.setMaxValue(64);
        knob_offset.setMinValue(-63);
        knob_offset.setPanoramicType(true);
        knob_offset.setValue(35);
        knob_offset.addPropertyChangeListener(new java.beans.PropertyChangeListener()
        {
            public void propertyChange(java.beans.PropertyChangeEvent evt)
            {
                knob_offsetPropertyChange(evt);
            }
        });

        javax.swing.GroupLayout knob_offsetLayout = new javax.swing.GroupLayout(knob_offset);
        knob_offset.setLayout(knob_offsetLayout);
        knob_offsetLayout.setHorizontalGroup(
            knob_offsetLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 38, Short.MAX_VALUE)
        );
        knob_offsetLayout.setVerticalGroup(
            knob_offsetLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 32, Short.MAX_VALUE)
        );

        jPanel1.add(knob_offset);

        jPanel2.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.CENTER, 0, 0));

        org.openide.awt.Mnemonics.setLocalizedText(lbl_name, "property"); // NOI18N
        lbl_name.setAlignmentX(0.5F);
        jPanel2.add(lbl_name);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, 60, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void knob_offsetPropertyChange(java.beans.PropertyChangeEvent evt)//GEN-FIRST:event_knob_offsetPropertyChange
    {//GEN-HEADEREND:event_knob_offsetPropertyChange
        if (evt.getSource() == knob_offset)
        {
            if (evt.getPropertyName().equals(FlatIntegerKnob.PROP_VALUE))
            {
                ptProperties.setProperty(property, knob_offset.getValue());
            }
        }
    }//GEN-LAST:event_knob_offsetPropertyChange


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private org.jjazz.ui.flatcomponents.api.FlatIntegerKnob knob_offset;
    private javax.swing.JLabel lbl_name;
    // End of variables declaration//GEN-END:variables
}
